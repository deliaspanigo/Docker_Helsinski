(base) legion@LegionUbuntu:~/MyGitHub/Docker_Helsinski/Part01/Excercises1.8$ docker ps -a
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES


(base) legion@LegionUbuntu:~/MyGitHub/Docker_Helsinski/Part01/Excercises1.8$ docker images
REPOSITORY   TAG       IMAGE ID   CREATED   SIZE


(base) legion@LegionUbuntu:~/MyGitHub/Docker_Helsinski/Part01/Excercises1.8$ docker build -t web-server .
[+] Building 2.1s (6/6) FINISHED                                                      docker:default
 => [internal] load build definition from Dockerfile                                            0.0s
 => => transferring dockerfile: 222B                                                            0.0s
 => [internal] load metadata for docker.io/devopsdockeruh/simple-web-service:alpine             2.0s
 => [auth] devopsdockeruh/simple-web-service:pull token for registry-1.docker.io                0.0s
 => [internal] load .dockerignore                                                               0.0s
 => => transferring context: 2B                                                                 0.0s
 => CACHED [1/1] FROM docker.io/devopsdockeruh/simple-web-service:alpine@sha256:dd4d367476f86b  0.0s
 => => resolve docker.io/devopsdockeruh/simple-web-service:alpine@sha256:dd4d367476f86b7d7579d  0.0s
 => exporting to image                                                                          0.0s
 => => exporting layers                                                                         0.0s
 => => writing image sha256:978fbf315695ef5a3ec2e77ee411c4dcd9aa9b867fbc7ea3d26962545fda0585    0.0s
 => => naming to docker.io/library/web-server                                                   0.0s


(base) legion@LegionUbuntu:~/MyGitHub/Docker_Helsinski/Part01/Excercises1.8$ docker run -it web-server
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /*path                    --> server.Start.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8080

